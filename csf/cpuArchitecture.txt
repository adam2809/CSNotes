>>ALU:
-Usually multi-bit one out and two in
-Performs mathematical, bitwise operations -> its behavior is dynamic
-Its functionality is controlled by additional pins
-The amount of circutry can be optimised by for example not implementing subtraction operation
and replacing it by adding positive and nagative numbers or ignoring the OR operation
which can be performed with NOT and AND(De Morgan laws). This is beneficial as less
gates mean lower cost and faster speed of travel of signals through the CPU
-The Multiplexor is used to control the functionality of the ALU (a, b, sel -> if sel than a else b -> out)
so essentially we have to perform every operation the ALU is capable of and than select
(sel in Mux stands for select) the approperiate values(using control pins as sel)
-Subtraction works by (assuming ALU: x,y -> out) inverting x, adding x to y and inverting
the out. To convert positive to negative in U2 you invert bits and add 1 so subtraction works like this:
TODO figure out subrtraction in ALU

>>von Neumann model:

MEMORY             CPU
|----|            |----|
|    | data bus   |    |
|    |<---------->|    |<--------- IN
|    | adress bus |    |
|    |----------->|    |---------> OUT
|    |            |    |
|----|            |----|
                    ^
                inside:
                #ALU
                #Registers
                #Control Logic
-this model allows to change behavior of the computer by altering instructions and data in memory
even though everything is still built with simple combinatotial logic
-von Neumann bottleneck - CPU can only fetch program instructions or data
>>6502
-8-bi
-3 8-bit registers plus Stack Pointer and Processor Status:
  #A - the Accumulator;performs arithmetic and logic operations
  #X and Y;temporary storage

>>SR latch, D latch/filip-flops(TODO revise D latch/flipflop) slides 02.11.18

>>
-used to model sequential logic circuts
-Slides 09.11.18 for how it looks(example with the 30p vending machine)
-to implement flip-flops are used to hold the index of the state as a binary number so with n filp-flops
2^n states can be represented(again illustration in slides)

>>Mealy(output depends on the state and input takes less time than Moore) vs
Moore(outputs only depend on the state(if state == 2: out 1) they are
synched with the clock and require more logic;most mahcines nowadays use this method) machine

>>Logic for resetting is often needed
